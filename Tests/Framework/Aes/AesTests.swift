//
//  AesTests.swift
//  Tests
//
//  Created by olid on 27/07/2022.
//

import XCTest

final class AesTests: XCTestCase {
    func testRounds() throws {
        let plainText = "Two One Nine Two".utf8Bytes
        let key = "Thats my Kung Fu".utf8Bytes
        
        let keys = RoundKey(byteArray: key).buildKeys().map { key in key.toState }
        let state = AesState(byteArray: plainText).add(key: keys[0])
        
        let rounds = (1...10).reduce([state]) {
            states, round in states + [states.last!.applyRound(key: keys[round], roundNumber: round)]
        }
                
        XCTAssertEqual(rounds[1].bytes,  [0x58, 0x47, 0x08, 0x8b, 0x15, 0xb6, 0x1c, 0xba, 0x59, 0xd4, 0xe2, 0xe8, 0xcd, 0x39, 0xdf, 0xce])
        XCTAssertEqual(rounds[2].bytes,  [0x43, 0xc6, 0xa9, 0x62, 0x0e, 0x57, 0xc0, 0xc8, 0x09, 0x08, 0xeb, 0xfe, 0x3d, 0xf8, 0x7f, 0x37])
        XCTAssertEqual(rounds[3].bytes,  [0x78, 0x76, 0x30, 0x54, 0x70, 0x76, 0x7d, 0x23, 0x99, 0x3c, 0x37, 0x5b, 0x4b, 0x39, 0x34, 0xf1])
        XCTAssertEqual(rounds[4].bytes,  [0xb1, 0xca, 0x51, 0xed, 0x08, 0xfc, 0x54, 0xe1, 0x04, 0xb1, 0xc9, 0xd3, 0xe7, 0xb2, 0x6c, 0x20])
        XCTAssertEqual(rounds[5].bytes,  [0x9b, 0x51, 0x20, 0x68, 0x23, 0x5f, 0x22, 0xf0, 0x5d, 0x1c, 0xbd, 0x32, 0x2f, 0x38, 0x91, 0x56])
        XCTAssertEqual(rounds[6].bytes,  [0x14, 0x93, 0x25, 0x77, 0x8f, 0xa4, 0x2b, 0xe8, 0xc0, 0x60, 0x24, 0x40, 0x5e, 0x0f, 0x92, 0x75])
        XCTAssertEqual(rounds[7].bytes,  [0x53, 0x39, 0x8e, 0x5d, 0x43, 0x06, 0x93, 0xf8, 0x4f, 0x0a, 0x3b, 0x95, 0x85, 0x52, 0x57, 0xbd])
        XCTAssertEqual(rounds[8].bytes,  [0x66, 0x25, 0x3c, 0x74, 0x70, 0xce, 0x5a, 0xa8, 0xaf, 0xd3, 0x0f, 0x0a, 0xa3, 0x73, 0x13, 0x54])
        XCTAssertEqual(rounds[9].bytes,  [0x09, 0x66, 0x8b, 0x78, 0xa2, 0xd1, 0x9a, 0x65, 0xf0, 0xfc, 0xe6, 0xc4, 0x7b, 0x3b, 0x30, 0x89])
        XCTAssertEqual(rounds[10].bytes, [0x29, 0xc3, 0x50, 0x5f, 0x57, 0x14, 0x20, 0xf6, 0x40, 0x22, 0x99, 0xb3, 0x1a, 0x02, 0xd7, 0x3a])
    }
}

