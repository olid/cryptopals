//
//  AesStateTests.swift
//  Tests
//
//  Created by olid on 27/07/2022.
//

import XCTest

final class AesDecryptionStateTests: XCTestCase {
    func testAddRoundKey() throws {
        let state = AesDecryptionState(byteArray: "Two One Nine Two".utf8Bytes)
        let roundkey = AesDecryptionState(byteArray: "Thats my Kung Fu".utf8Bytes)
        
        let result = state.apply(key: roundkey)
        
        XCTAssertEqual(result, AesDecryptionState(byteArray: [0x00, 0x1f, 0x0e, 0x54, 0x3c, 0x4e, 0x08, 0x59, 0x6e, 0x22, 0x1b, 0x0b, 0x47, 0x74, 0x31, 0x1a]))
    }
    
    func testSubstitute() throws {
        let state = AesDecryptionState(byteArray: [0x00, 0x1f, 0x0e, 0x54, 0x3c, 0x4e, 0x08, 0x59, 0x6e, 0x22, 0x1b, 0x0b, 0x47, 0x74, 0x31, 0x1a])
        let subsituted = state.substitute()
        
        XCTAssertEqual(subsituted, AesDecryptionState(byteArray: [0x52, 0xcb, 0xd7, 0xfd, 0x6d, 0xb6, 0xbf, 0x15, 0x45, 0x94, 0x44, 0x9e, 0x16, 0xca, 0x2e, 0x43]))
    }
    
    func testShiftRows() throws {
        let state = AesDecryptionState(byteArray: [0x63, 0xc0, 0xab, 0x20, 0xeb, 0x2f, 0x30, 0xcb, 0x9f, 0x93, 0xaf, 0x2b, 0xa0, 0x92, 0xc7, 0xa2])
        let shifted = state.shiftRows()
        
        XCTAssertEqual(shifted, AesDecryptionState(byteArray: [0x63, 0x92, 0xaf, 0xcb, 0xeb, 0xc0, 0xc7, 0x2b, 0x9f, 0x2f, 0xab, 0xa2, 0xa0, 0x93, 0x30, 0x20]))
    }
    
    func testMixColumns() throws {
        let state = AesDecryptionState(byteArray: [0xba, 0x75, 0xf4, 0x7a, 0x84, 0xa4, 0x8d, 0x32, 0xe8, 0x8d, 0x06, 0x0e, 0x1b, 0x40, 0x7d, 0x5d])
        let mixed = state.mixColumn()
        
        XCTAssertEqual(mixed, AesDecryptionState(byteArray: [0x63, 0x2f, 0xaf, 0xa2, 0xeb, 0x93, 0xc7, 0x20, 0x9f, 0x92, 0xab, 0xcb, 0xa0, 0xc0, 0x30, 0x2b]))
    }
    
    func testRounds() throws {
        // todo
    }
}

